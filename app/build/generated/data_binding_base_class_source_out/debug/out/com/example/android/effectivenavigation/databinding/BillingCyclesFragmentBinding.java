// Generated by view binder compiler. Do not edit!
package com.example.android.effectivenavigation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.android.effectivenavigation.R;
import com.github.sundeepk.compactcalendarview.CompactCalendarView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BillingCyclesFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView billing2textview1;

  @NonNull
  public final Button billingButton1;

  @NonNull
  public final Button billingButton2;

  @NonNull
  public final Button billingButton3;

  @NonNull
  public final EditText billingEditText1;

  @NonNull
  public final EditText billingEditText2;

  @NonNull
  public final EditText billingEditText3;

  @NonNull
  public final ConstraintLayout billingLayout2;

  @NonNull
  public final TextView billingTextView;

  @NonNull
  public final CompactCalendarView compactcalendarView;

  private BillingCyclesFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView billing2textview1, @NonNull Button billingButton1,
      @NonNull Button billingButton2, @NonNull Button billingButton3,
      @NonNull EditText billingEditText1, @NonNull EditText billingEditText2,
      @NonNull EditText billingEditText3, @NonNull ConstraintLayout billingLayout2,
      @NonNull TextView billingTextView, @NonNull CompactCalendarView compactcalendarView) {
    this.rootView = rootView;
    this.billing2textview1 = billing2textview1;
    this.billingButton1 = billingButton1;
    this.billingButton2 = billingButton2;
    this.billingButton3 = billingButton3;
    this.billingEditText1 = billingEditText1;
    this.billingEditText2 = billingEditText2;
    this.billingEditText3 = billingEditText3;
    this.billingLayout2 = billingLayout2;
    this.billingTextView = billingTextView;
    this.compactcalendarView = compactcalendarView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BillingCyclesFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BillingCyclesFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.billing_cycles_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BillingCyclesFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.billing2textview1;
      TextView billing2textview1 = ViewBindings.findChildViewById(rootView, id);
      if (billing2textview1 == null) {
        break missingId;
      }

      id = R.id.billing_button1;
      Button billingButton1 = ViewBindings.findChildViewById(rootView, id);
      if (billingButton1 == null) {
        break missingId;
      }

      id = R.id.billing_button2;
      Button billingButton2 = ViewBindings.findChildViewById(rootView, id);
      if (billingButton2 == null) {
        break missingId;
      }

      id = R.id.billing_button3;
      Button billingButton3 = ViewBindings.findChildViewById(rootView, id);
      if (billingButton3 == null) {
        break missingId;
      }

      id = R.id.billing_editText1;
      EditText billingEditText1 = ViewBindings.findChildViewById(rootView, id);
      if (billingEditText1 == null) {
        break missingId;
      }

      id = R.id.billing_editText2;
      EditText billingEditText2 = ViewBindings.findChildViewById(rootView, id);
      if (billingEditText2 == null) {
        break missingId;
      }

      id = R.id.billing_editText3;
      EditText billingEditText3 = ViewBindings.findChildViewById(rootView, id);
      if (billingEditText3 == null) {
        break missingId;
      }

      ConstraintLayout billingLayout2 = (ConstraintLayout) rootView;

      id = R.id.billingTextView;
      TextView billingTextView = ViewBindings.findChildViewById(rootView, id);
      if (billingTextView == null) {
        break missingId;
      }

      id = R.id.compactcalendar_view;
      CompactCalendarView compactcalendarView = ViewBindings.findChildViewById(rootView, id);
      if (compactcalendarView == null) {
        break missingId;
      }

      return new BillingCyclesFragmentBinding((ConstraintLayout) rootView, billing2textview1,
          billingButton1, billingButton2, billingButton3, billingEditText1, billingEditText2,
          billingEditText3, billingLayout2, billingTextView, compactcalendarView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
